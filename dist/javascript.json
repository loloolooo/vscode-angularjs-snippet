{"Angular $q":{"prefix":"ngq","description":"Angular 1.x $q\n","body":["var deferred = \\$q.defer();","","deferred.resolve(resultObj); //triggers successCallback","deferred.reject(reasonObj); //triggers errorCallback","deferred.notify(progressObj); //triggers progressCallback","","var promise = deferred.promise;","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}).catch(function ${4:fnFailure}() {","\t\t","\t}).finally(function ${5:fnAlways}() {","\t\t","\t});","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}, function ${2:errorCallback}() {","\t\t","\t}, function ${3:progressCallback}() {","\t\t","\t});",""]},"Angular $q.all":{"prefix":"ngqAll","description":"Angular 1.x $q.all\n","body":["\\$q.all([${1:promises}]).then(function (response) {","\t$0","});",""]},"Angular $q.race":{"prefix":"ngqRace","description":"Angular 1.x $q.race\n","body":["\\$q.race([${1:promises]).then(function (response) {","\t$0","});",""]},"Angular $http":{"prefix":"ngHTTP","description":"Angular 1.x $http\n","body":["var deferred = \\$q.defer();","\\$http({","\turl: '${url}',","\tmethod: '${METHOD}'","}).then(function (response) {","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.get":{"prefix":"ngHTTPGet","description":"Angular 1.x $http.get\n","body":["var deferred = \\$q.defer();","\\$http.get('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.post":{"prefix":"ngHTTPPost","description":"Angular 1.x $http.post\n","body":["var deferred = \\$q.defer();","\\$http.post('${url}', data, config).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.put":{"prefix":"ngHTTPPut","description":"Angular 1.x $http.put\n","body":["var deferred = \\$q.defer();","\\$http.put('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.patch":{"prefix":"ngHTTPPatch","description":"Angular 1.x $http.patch\n","body":["var deferred = \\$q.defer();","\\$http.patch('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.delete":{"prefix":"ngHTTPDelete","description":"Angular 1.x $http.delete\n","body":["var deferred = \\$q.defer();","\\$http.delete('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.head":{"prefix":"ngHTTPHead","description":"Angular 1.x $http.head\n","body":["var deferred = \\$q.defer();","\\$http.head('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular $http.jsonp":{"prefix":"ngHTTPJSONP","description":"Angular 1.x $http.jsonp\n","body":["var deferred = \\$q.defer();","\\$http.jsonp('${url}', ${config}).then(function (response){","\t${0}","\tdeferred.resolve(response);","}, function (error) {","\tdeferred.reject(error);","});","return deferred.promise;",""]},"Angular Service return a $$api.request promise":{"prefix":"apiRequest","description":"Angular 1.x Service $$api.request return a promise\n","body":["function ${requestResource}(${config}) {","\treturn \\$\\$api.request({","\tmethod: '${GET}',","\turl: '${url}',","\tparams: ${config}","});"]},"Angular Service return a $$api.get promise":{"prefix":"apiGet","description":"Angular 1.x Service $$api.get return a promise\n","body":["function ${getResource}(${config}) {","\treturn \\$\\$api.get(${url}, ${config});","}",""]},"Angular Service return a $$api.post promise":{"prefix":"apiPost","description":"Angular 1.x Service $$api.post return a promise\n","body":["function ${postResource}(${data}, ${config}) {","\treturn \\$\\$api.post(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.put promise":{"prefix":"apiPut","description":"Angular 1.x Service $$api.put return a promise\n","body":["function ${putResource}(${data}, ${config}) {","\treturn \\$\\$api.put(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.patch promise":{"prefix":"apiPatch","description":"Angular 1.x Service $$api.patch return a promise\n","body":["function ${patchResource}(${data}, ${config}) {","\treturn \\$\\$api.patch(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.delete promise":{"prefix":"apiDelete","description":"Angular 1.x Service $$api.delete return a promise\n","body":["function ${deleteResource}(${config}) {","\treturn \\$\\$api.delete(${url}, ${config});","}",""]},"Angular Service return a $$api.head promise":{"prefix":"apiHead","description":"Angular 1.x Service $$api.head return a promise\n","body":["function ${headResource}(${config}) {","\treturn \\$\\$api.head(${url}, ${config});","}",""]},"Angular Service return a $$api.jsonp promise":{"prefix":"apiJSONP","description":"Angular 1.x Service $$api.jsonp return a promise\n","body":["function ${jsonpResource}(${config}) {","\treturn \\$\\$api.jsonp(${url}, ${config});","}",""]},"Angular Controller calls service promise":{"prefix":["api","ngAjax"],"description":"Angular 1.x Controller calls service promise\n","body":["${name}Service.${method}Resource.then(function (response) {","\tif (response.data.code == '200') {","\t\t\\$scope.${data} = response.data.data;","\t\t$0","\t}","}).catch(function (error) {","","});",""]},"Angular AJAX":{"prefix":"$$api","description":"Angular 1.x Async Ajax Request Wrapper\n","body":["(function() {","\t'use strict';","","\tangular.module('${1:name}').factory('\\$\\$api', \\$\\$api);","","\t\\$\\$api.inject = ['\\$http', '\\$q'];","","\tfunction \\$\\$api(\\$http, \\$q) {","\t\tvar TYPE_JSON = 'application/json';","\t\tvar TYPE_FORM = 'application/x-www-form-urlencoded'; // url encoded","\t\tvar TYPE_FORM_DATA = 'multipart/form-data';","","\t\t// AngularJS 默认 'Content-Type' 是 application/json ，","\t\t// 通过设置 'Content-Type': undefined，不仅把 Content-Type 设置为 multipart/form-data，还填充上当前的 boundary","\t\t// 如果手动设置为 'Content-Type': multipart/form-data，后台会抛出异常：the request was rejected because no multipart boundary was found","\t\t// boundary 是随机生成的字符串，用来分隔文本的开始和结束","\t\t// 设置 transformRequest: angular.identity ，anjularjs transformRequest function 将序列化我们的 formdata object，也可以不添加","","\t\tvar TYPE_MULTIPART_FORM_DATA = undefined;","","\t\tvar CONTENT_TYPE_JSON = { 'Content-Type': TYPE_JSON };","\t\tvar CONTENT_TYPE_FORM = { 'Content-Type': TYPE_FORM };","\t\tvar CONTENT_TYPE_FORM_DATA = { 'Content-Type': TYPE_FORM_DATA };","\t\tvar CONTENT_TYPE_MULTIPART_FORM_DATA = {","\t\t\t'Content-Type': TYPE_MULTIPART_FORM_DATA","\t\t};","","\t\tvar queryString = function (params) {","\t\t\tif (params && typeof params === 'object') {","\t\t\t\tvar str = '?' + Object.keys(params)","\t\t\t\t\t.map(function (key) {","\t\t\t\t\t\treturn (encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));","\t\t\t\t\t})","\t\t\t\t\t.join('&');","\t\t\t\treturn str;","\t\t\t}","\t\t\treturn '';","\t\t};","","\t\tfunction _request(\\$\\$method) {","\t\t\tvar deferred = \\$q.defer();","","\t\t\t\\$\\$method","\t\t\t\t.then(function(response) {","\t\t\t\t\tdeferred.resolve(response);","\t\t\t\t})","\t\t\t\t.catch(function(response) {","\t\t\t\t\tdeferred.reject(response);","\t\t\t\t});","","\t\t\treturn deferred.promise;","\t\t}","","\t\tfunction httpRequest(config) {","\t\t\tif (","\t\t\t\tconfig.method.toLowerCase() === 'get' &&","\t\t\t\ttypeof config.data === 'object'","\t\t\t) {","\t\t\t\tconfig.url += queryString(config.data);","\t\t\t}","\t\t\tvar \\$\\$method = \\$http(config);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction getRequest(url, config) {","\t\t\tif (typeof config === 'object') {","\t\t\t\turl += queryString(config);","\t\t\t}","","\t\t\tvar \\$\\$method = \\$http.get(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction postRequest(url, data, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.post(url, data, config)","\t\t\t\t\t: \\$http.post(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction putRequest(url, data, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.put(url, data, config)","\t\t\t\t\t: \\$http.put(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction patchRequest(url, data, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.patch(url, data, config)","\t\t\t\t\t: \\$http.patch(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction deleteRequest(url, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.delete(url, config)","\t\t\t\t\t: \\$http.delete(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction headRequest(url, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.head(url, config)","\t\t\t\t\t: \\$http.head(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction jsonpRequest(url, config) {","\t\t\tvar \\$\\$method =","\t\t\t\ttypeof config !== 'undefined'","\t\t\t\t\t? \\$http.jsonp(url, config)","\t\t\t\t\t: \\$http.jsonp(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction allRequest(promises) {","\t\t\treturn \\$q.all(promises);","\t\t}","","\t\tfunction raceRequest(promises) {","\t\t\treturn \\$q.race(promises);","\t\t}","","\t\tfunction isJson(str) {","\t\t\tif (typeof str !== 'string') {","\t\t\t\treturn false;","\t\t\t}","","\t\t\ttry {","\t\t\t\tvar result = JSON.parse(str);","\t\t\t\tvar type = Object.prototype.toString.call(result);","\t\t\t\treturn type === '[object Object]' || type === '[object Array]';","\t\t\t} catch (err) {","\t\t\t\treturn false;","\t\t\t}","\t\t}","","\t\tfunction checkResponse (response) {","\t\t\tresponse.checked = false;","\t\t\tresponse.message = '';","","\t\t\t// var code = status && status.match(/^\\d+/)[0];","\t\t}","","","\t\treturn {","\t\t\trequest: httpRequest,","\t\t\tget: getRequest,","\t\t\tpost: postRequest,","\t\t\tput: putRequest,","\t\t\tpatch: patchRequest,","\t\t\tdelete: deleteRequest,","\t\t\thead: headRequest,","\t\t\tjsonp: jsonpRequest,","\t\t\tall: allRequest,","\t\t\trace: raceRequest,","\t\t\tisJson: isJson,","\t\t\tcheckResponse: checkResponse,","\t\t\tTYPE_JSON: TYPE_JSON,","\t\t\tTYPE_FORM: TYPE_FORM,","\t\t\tTYPE_FORM_DATA: TYPE_FORM_DATA,","\t\t\tTYPE_MULTIPART_FORM_DATA: TYPE_MULTIPART_FORM_DATA,","\t\t\tCONTENT_TYPE_JSON: CONTENT_TYPE_JSON,","\t\t\tCONTENT_TYPE_FORM: CONTENT_TYPE_FORM,","\t\t\tCONTENT_TYPE_FORM_DATA: CONTENT_TYPE_FORM_DATA,","\t\t\tCONTENT_TYPE_MULTIPART_FORM_DATA: CONTENT_TYPE_MULTIPART_FORM_DATA","\t\t};","\t}","})();",""]},"$attr.$normalize()":{"prefix":"ngAttr.$normalize()","body":"\\${1:\\$attrs}.\\$normalize(${2:name});"},"$attr.$addClass()":{"prefix":"ngAttr.$addClass()","body":"\\${1:\\$attrs}.\\$addClass(${2:classVal});"},"$attr.$removeClass()":{"prefix":"ngAttr.$removeClass()","body":"\\${1:\\$attrs}.\\$removeClass(${2:classVal});"},"$attr.$updateClass()":{"prefix":"ngAttr.$updateClass()","body":"\\${1:\\$attrs}.\\$updateClass(${2:newClasses}, ${3:oldClasses});"},"$attr.$observe()":{"prefix":"ngAttr.$observe()","body":"\\${1:\\$attrs}.\\$observe(${2:key}, ${3:fn});"},"$attr.$set()":{"prefix":"ngAttr.$set()","body":"\\${1:\\$attrs}.\\$set(${2:name}, ${3:value}); "},"Angular off ($destroy)":{"prefix":["ngOff","ngDestroy"],"description":"Angular 1.x $off","body":["\\$element.on('\\$destroy', function () {","\t\\$element.off('event', handleEvent);","\tclearWatch();","\t\\$scope.\\$destroy();","});","\\$scope.\\$on('\\$destroy', function() {","\t\\$element.off('event', handleEvent);","// clearWatch();","// clearListener();","});"]},"$timeout":{"prefix":"ngto","body":["\\$timeout(function() {","\t$0","});"]},"Angular Component (Simple)":{"prefix":"ngco","body":[".component('${1:name}', {","\ttemplateUrl: '${2:component}.template.html',","\tbindings: {","\t\toneWay: '<?', // one-way","\t\ttwoWay: '=?',","\t\tstring: '@?',","\t\tonEvent: '&?', // on-event","\t},","\tcontroller: [","\t\tfunction () {","\t\t\tvar \\$ctrl = this;","","\t\t\t\\$ctrl.\\$onInit = function () {","\t\t\t\t$0","\t\t\t};","","\t\t\t\\$ctrl.\\$onChanges = function (changes) {","\t\t\t\t","\t\t\t};","","\t\t\t\\$ctrl.\\$onDestroy = function () {","\t\t\t\t","\t\t\t};","","\t\t},","\t],","})",""],"description":"Angular 1.x Component (Simple)\n"},"Angular Component":{"prefix":"ngComponent","description":"Angular 1.5+ Component\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.component('${2:component}', ${2:component}());","","","\tfunction ${2:component}() {","","\t\t${2:component}Controller.\\$inject = [];","","\t\tfunction ${2:component}Controller() {","\t\t\tvar \\$ctrl = this;","","\t\t\t\\$ctrl.\\$onInit = function () {","\t\t\t\t$0","\t\t\t};","","\t\t\t\\$ctrl.\\$onChanges = function (changes) {","\t\t\t\t","\t\t\t};","","\t\t\t\\$ctrl.\\$onDestroy = function () {","\t\t\t\t","\t\t\t};","","\t\treturn {","\t\t\ttemplateUrl: '${3:component}.tpl.html","\t\t\tbindings: {","\t\t\t\toneWay: '<?', // one-way","\t\t\t\ttwoWay: '=?',","\t\t\t\tstring: '@?',","\t\t\t\tonEvent: '&?', // on-event","\t\t\t},","\t\t\tcontroller: ${2:component}Controller,","\t\t}","\t}","","}());"]},"Angular Config (Simple)":{"prefix":"ngcon","body":[".config(['${1:\\$stateProvider}', '${2:\\$urlRouterProvider}', function (${1:\\$stateProvider}, ${2:\\$urlRouterProvider}) {","\t$0","}])"],"description":"Angular 1.x Config (Simple)\n"},"Angular Config":{"prefix":"ngConfig","description":"Angular 1.x Config\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.config(${2:config}Config);","","\t${2:config}Config.\\$inject = [];","","\tfunction ${2:config}Config() {","\t\t$0","\t}","","}());"]},"Angular Constant (Simple)":{"prefix":"ngconst","description":"Angular 1.x Constant (Simple)\n","body":[".constant('${1:CONSTANT}', ${2:Value})"]},"Angular Constant":{"prefix":"ngConstant","description":"Angular 1.x Constant\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.constant('${2:CONSTANT}', ${3:Value});","","}());"]},"Angular $ctrl method":{"prefix":"ngCtrl.method","description":"Angular 1.x $ctrl method \n","body":["\\$ctrl.${fn} = function () {","\t$0","};"]},"Angular $ctrl.property":{"prefix":"ngCtrl.property","description":"Angular 1.x $ctrl\n","body":["\\$ctrl.${1:key} = ${value};","$0"]},"Angular Controller (Simple)":{"prefix":"ngc","body":[".controller('${1:name}Ctrl', ['${2:\\$scope}', '${3:nameService}', function (${2:\\$scope}, ${3:nameService}) {","\t$0","}])",""],"description":"Angular 1.x Controller (Simple)\n"},"Angular Controller":{"prefix":"ngController","description":"Angular 1.x Controller\n依赖采用 Annotation 形式\n['dependencies', fn(dependencies)]，\n防止代码压缩参数破坏\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.controller('${2:name}Ctrl', ${2:name}Ctrl)","","\t${2:name}Ctrl.\\$inject = ['${3:\\$scope}'];","","\tfunction ${2:name}Ctrl(${3:\\$scope}) {","\t\tvar \\$ctrl = this;","\t\t$0","","\t}","","}());"]},"Angular Decorator":{"prefix":"ngDecorator","description":"Angular 1.x Decorator\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${module}')","\t\t.config(${decorator}Decorator)","","\tconfig${decorator}Decorator.\\$inject = ['$$provide'];","","\tfunction config${decorator}Decorator($$provide){","\t\tfunction _${targetService}Decorator($$delegate){","","\t\t\tfunction _decoratedTarget() {","\t\t\t\t//pre","\t\t\t\treturn $$delegate.${target}()","\t\t\t\t//post","\t\t\t}","","\t\t\treturn {","\t\t\t\t${target}: _decoratedTarget","\t\t\t}","\t\t}","","\t\t$$provide.decorator(${targetService}, _${targetService}Decorator);","\t}","","}());"]},"Angular Directive (Simple)":{"prefix":"ngd","body":[".directive('${1:name}', function () {","\treturn {","\t\trestrict: 'AE',","\t\ttemplateUrl: '${2:directive.html}',","\t\tscope: {","\t\t\toneWay: '<?', // one-way","\t\t\ttwoWay: '=?',","\t\t\tstring: '@?',","\t\t\tonEvent: '&?', // on-event","\t\t},","\t\tlink: function (\\$scope, \\$element, \\$attrs) {","\t\t\t$0","\t\t},","\t};","})"],"description":"Angular 1.x Directive (Simple)\n"},"Angular Directive(Component)":{"prefix":"ngDirective","description":"Angular 1.x Directive & Controller\n组件型指令(Component)\n用 controller 处理业务逻辑，自封闭、内聚\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.directive('${2:directive}', ${2:directive});","","\t${2:directive}.\\$inject = [];","","\tfunction ${2:directive}() {","","\t\tfunction link(\\$scope, \\$element, \\$attrs, controller){","\t\t}","","\t\treturn {","\t\t\tlink: link,","\t\t\trestrict: '${AE}',","\t\t\tscope: {","\t\t\t\toneWay: '<?', // one-way","\t\t\t\ttwoWay: '=?',","\t\t\t\tstring: '@?',","\t\t\t\tonEvent: '&?', // on-event","\t\t\t},","\t\t}","\t}","","} ());"]},"Angular Directive(Decorator)":{"prefix":"ngDirective.Decorator","description":"Angular 1.x Directive\n装饰器型指令(Decorator)\n用 link 函数，不是一个主体，只是附加行为能力，不使用新的作用域或独立的作用域\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.directive('${2:directive}', ${2:directive});","","\t${2:directive}.\\$inject = [];","","\tfunction ${2:directive}() {","\t\tvar directive = {","\t\t\tlink: link,","\t\t\trestrict: 'EA'","\t\t};","","\t\tfunction link(\\$scope, \\$element, \\$attrs) {","\t\t\t$0","\t\t}","","\t\treturn directive;","\t}","","})();"]},"Angular Factory (Simple)":{"prefix":"ngfa","body":[".factory('${1:name}', ['${2:dep}', function(${2:dep}){","\treturn function (){","\t\t$0","\t};","}])",""],"description":"Angular 1.x Factory (Simple)\n"},"Angular Factory":{"prefix":"ngFactory","description":"Angular 1.x Factory\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.factory('${2:name}Factory', ${2:name}Factory)","","\t${2:name}Factory.\\$inject = [];","","\tfunction ${2:name}Factory() {","\t\tvar service = {","\t\t\t$0","\t\t};","","\t\treturn service;","\t}","})();"]},"Angular Filter (Simple)":{"prefix":"ngf","body":[".filter('${1:name}', function () {","\treturn function (${2:input}) {","\t\treturn $0","\t};","})",""],"description":"Angular 1.x Filter (Simple)\n"},"Angular Filter":{"prefix":"ngFilter","description":"Angular 1.x Filter\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.filter('${2:name}', ${2:name})","","\tfunction ${2:name}() {","","\t\tfunction ${2:name}Filter(${Params}){","\t\t\t$0","\t\t\treturn ${Params}","\t\t}","","\t\treturn ${2:name}Filter;","\t}","","}());"]},"ngFormReset":{"prefix":"ngFormReset","body":["if (${1:formName}) {","\t$scope.${2:formData} = {};","\t${1:formName}.$setPristine();","\t${1:formName}.$setUntouched();","\t$0","}"],"description":"AngularJS 1.x Form Reset"},"ngForm.$pristine":{"prefix":"ngForm.$pristine","body":"\\${1:formName}.\\$pristine"},"ngForm.$dirty":{"prefix":"ngForm.$dirty","body":"\\${1:formName}.\\$dirty"},"ngForm.$valid":{"prefix":"ngForm.$valid","body":"\\${1:formName}.\\$valid"},"ngForm.$invalid":{"prefix":"ngForm.$invalid","body":"\\${1:formName}.\\$invalid"},"ngForm.$submitted":{"prefix":"ngForm.$submitted","body":"\\${1:formName}.\\$submitted"},"ngForm.$pending":{"prefix":"ngForm.$pending","body":"\\${1:formName}.\\$pending"},"ngForm.$error":{"prefix":"ngForm.$error","body":"\\${1:formName}.\\$error"},"ngForm.$rollbackViewValue()":{"prefix":"ngForm.method.$rollbackViewValue","body":"\\${1:formName}.\\$rollbackViewValue();"},"ngForm.$commitViewValue()":{"prefix":"ngForm.method.$commitViewValue","body":"\\${1:formName}.\\$commitViewValue();"},"ngForm.$addControl()":{"prefix":"ngForm.method.$addControl","body":"\\${1:formName}.\\$addControl(${2:control});"},"ngForm.$getControls()":{"prefix":"ngForm.method.$getControls","body":"\\${1:formName}.\\$getControls();"},"ngForm.$removeControl()":{"prefix":"ngForm.method.$removeControl","body":"\\${1:formName}.\\$removeControl(${2:control});"},"ngForm.$setDirty()":{"prefix":"ngForm.method.$setDirty","body":"\\${1:formName}.\\$setDirty();"},"ngForm.$setPristine()":{"prefix":"ngForm.method.$setPristine","body":"\\${1:formName}.\\$setPristine();"},"ngForm.$setUntouched()":{"prefix":"ngForm.method.$setUntouched","body":"\\${1:formName}.\\$setUntouched();"},"ngForm.$setSubmitted()":{"prefix":"ngForm.method.$setSubmitted","body":"\\${1:formName}.\\$setSubmitted();"},"ngForm.$setValidity()":{"prefix":"ngForm.method.$setValidity","body":"\\${1:formName}.\\$setValidity(${2:validationErrorKey}, ${3:isValid}, ${4:controller});"},"ngModel.$render()":{"prefix":"ngModel.method.$render","body":"\\${1:ngModel}.method.\\$render();"},"ngModel.$isEmpty()":{"prefix":"ngModel.method.$isEmpty","body":"\\${1:ngModel}.method.\\$isEmpty(${2:value});"},"ngModel.$setPristine()":{"prefix":"ngModel.method.$setPristine","body":"\\${1:ngModel}.method.\\$setPristine();"},"ngModel.$setDirty()":{"prefix":"ngModel.method.$setDirty","body":"\\${1:ngModel}.method.\\$setDirty();"},"ngModel.$setUntouched()":{"prefix":"ngModel.method.$setUntouched","body":"\\${1:ngModel}.method.\\$setUntouched();"},"ngModel.$setTouched()":{"prefix":"ngModel.method.$setTouched","body":"\\${1:ngModel}.method.\\$setTouched();"},"ngModel.$rollbackViewValue()":{"prefix":"ngModel.method.$rollbackViewValue","body":"\\${1:ngModel}.method.\\$rollbackViewValue();"},"ngModel.$validate()":{"prefix":"ngModel.method.$validate","body":"\\${1:ngModel}.method.\\$validate();"},"ngModel.$commitViewValue()":{"prefix":"ngModel.method.$commitViewValue","body":"\\${1:ngModel}.method.\\$commitViewValue();"},"ngModel.$setViewValue()":{"prefix":"ngModel.method.$setViewValue","body":"\\${1:ngModel}.method.\\$setViewValue(${2:value}, ${3:trigger});"},"ngModel.$overrideModelOptions()":{"prefix":"ngModel.method.$overrideModelOptions","body":"\\${1:ngModel}.method.\\$overrideModelOptions(options);"},"ngModel.$processModelValue()":{"prefix":"ngModel.method.$processModelValue","body":"\\${1:ngModel}.method.\\$processModelValue();"},"ngModel.$setValidity()":{"prefix":"ngModel.method.$setValidity","body":"\\${1:ngModel}.method.\\$setValidity(${2:validationErrorKey}, ${3:isValid}); "},"ngModel.$viewValue":{"prefix":"ngModel.$viewValue","body":"\\${1:ngModel}.\\$viewValue"},"ngModel.$modelValue":{"prefix":"ngModel.$modelValue","body":"\\${1:ngModel}.\\$modelValue"},"ngModel.$parsers":{"prefix":"ngModel.$parsers","body":"\\${1:ngModel}.\\$parsers"},"ngModel.$formatters":{"prefix":"ngModel.$formatters","body":"\\${1:ngModel}.\\$formatters"},"ngModel.$validators":{"prefix":"ngModel.$validators","body":"\\${1:ngModel}.\\$validators"},"ngModel.$asyncValidators":{"prefix":"ngModel.$asyncValidators","body":"\\${1:ngModel}.\\$asyncValidators"},"ngModel.$viewChangeListeners":{"prefix":"ngModel.$viewChangeListeners","body":"\\${1:ngModel}.\\$viewChangeListeners"},"ngModel.$error":{"prefix":"ngModel.$error","body":"\\${1:ngModel}.\\$error"},"ngModel.$pending":{"prefix":"ngModel.$pending","body":"\\${1:ngModel}.\\$pending"},"ngModel.$untouched":{"prefix":"ngModel.$untouched","body":"\\${1:ngModel}.\\$untouched"},"ngModel.$touched":{"prefix":"ngModel.$touched","body":"\\${1:ngModel}.\\$touched"},"ngModel.$pristine":{"prefix":"ngModel.$pristine","body":"\\${1:ngModel}.\\$pristine"},"ngModel.$dirty":{"prefix":"ngModel.$dirty","body":"\\${1:ngModel}.\\$dirty"},"ngModel.$valid":{"prefix":"ngModel.$valid","body":"\\${1:ngModel}.\\$valid"},"ngModel.$invalid":{"prefix":"ngModel.$invalid","body":"\\${1:ngModel}.\\$invalid"},"ngModel.$name":{"prefix":"ngModel.$name","body":"\\${1:ngModel}.\\$name"},"Angular Module (Simple)":{"prefix":"ngm","body":["var ${1:myApp} = angular.module('${1:myApp}', [$2]);$0"],"description":"Angular 1.x Module (Simple)\n"},"Angular Module":{"prefix":"ngModule","description":"Angular 1.x Module\n","body":["(function () {","\t'use strict';","","\tangular.module('${Module}', [","\t\t/* 1. Main App Module */","\t\t/* 1.1 Shared modules(2) */","\t\t","\t\t/* 1.2 Feature areas(3) */","\t\t","\t\t/* 2. Cross App Modules */","\t\t","\t\t/* 2.1 Angular modules */","\t\t","\t\t/* 2.2 Cross-app modules */","\t\t","\t\t/* 2.3 3rd-party modules */","\t\t","\t\t/* 3. App Feature Modules */","\t\t$0","\t]);","","}());"]},"Angular Provider":{"prefix":"ngProvider","description":"Angular 1.x Provider\n","body":["(function () {","\t'use strict';","","\tangular.module('${1:name}').provider('${2:name}', ${2:name}Provider);","","\tfunction ${2:name}Provider() {","\t\tthis.options = { delay: 5000, templateUrl: 'component.tpl.html' };","","\t\tthis.setOptions = function (options) {","\t\t\tif (!angular.isObject(options)) {","\t\t\t\tthrow new Error('Options should be an object!');","\t\t\t}","\t\t\tthis.options = angular.extend({}, this.options, options);","\t\t};","","\t\tthis.\\$get = providerFactory;","","\t\tproviderFactory.\\$inject = [","\t\t\t'\\$http',","\t\t\t'\\$q',","\t\t\t'\\$timeout',","\t\t\t'\\$window',","\t\t\t'\\$sce',","\t\t\t'\\$templateCache',","\t\t\t'\\$compile',","\t\t\t'\\$rootScope',","\t\t\t'\\$injector',","\t\t];","","\t\tfunction providerFactory(\\$http, \\$q, \\$timeout, \\$window, \\$sce, \\$templateCache, \\$compile, \\$rootScope, \\$injector) {","\t\t\tvar options = this.options;","$0","\t\t\tvar service = function (param, type) {","\t\t\t\tvar deferred = q.defer();","","\t\t\t\tif (typeof param !== 'object' || param === null) {","\t\t\t\t\tparam = {};","\t\t\t\t}","","\t\t\t\tparam.template = param.templateUrl || options.templateUrl;","","\t\t\t\tvar template = templateCache.get(param.template);","","\t\t\t\tif (template) {","\t\t\t\t\thandle(template);","\t\t\t\t} else {","\t\t\t\t\thttp","\t\t\t\t\t\t.get(param.template, { cache: true })","\t\t\t\t\t\t.then(function (response) {","\t\t\t\t\t\t\thandle(response.data);","\t\t\t\t\t\t})","\t\t\t\t\t\t.catch(function (error) {","\t\t\t\t\t\t\tthrow new Error('Template (' + param.template + ') could not be loaded. ' + error);","\t\t\t\t\t\t});","\t\t\t\t}","","\t\t\t\tfunction handle(template) {","\t\t\t\t\tvar scope = param.scope.new();","\t\t\t\t\tscope.message = \\$sce.trustAsHtml(param.message);","","\t\t\t\t\tvar templateElement = \\$compile(template)(scope);","","\t\t\t\t\tvar closeEvent = function (event) {","\t\t\t\t\t\tif (scope.onClose) {","\t\t\t\t\t\t\tscope.\\$apply(scope.onClose(templateElement));","\t\t\t\t\t\t}","","\t\t\t\t\t\ttemplateElement.remove();","\t\t\t\t\t\tscope.\\$destroy();","\t\t\t\t\t};","","\t\t\t\t\ttemplateElement.bind('click', closeEvent);","","\t\t\t\t\tfunction otherHandler() {}","","\t\t\t\t\t\\$timeout(otherHandler);","","\t\t\t\t\tdeferred.resolve(scope);","\t\t\t\t}","","\t\t\t\treturn deferred.promise;","\t\t\t};","","\t\t\tservice.info = function (param) {","\t\t\t\treturn this(param, 'info');","\t\t\t};","","\t\t\treturn service;","\t\t}","\t}","})();","","angular.module('${1:name}').run(['\\$templateCache', function (\\$templateCache) {","\t\\$templateCache.put('component.tpl.html', '');","})",""]},"Angular Run (Simple)":{"prefix":"ngr","body":[".run(['\\$templateCache', function (\\$templateCache) {","\t\\$templateCache.put('${1:name}.template.html', '${0:content of the template}');","}])",""],"description":"Angular 1.x Run (Simple)\n"},"Angular Run":{"prefix":"ngRun","description":"Angular 1.x Run\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.run(${2:name}Run)","","\t${2:name}Run.\\$inject = ['\\$templateCache'];","","\tfunction ${2:name}Run(\\$templateCache) {","\t\t\\$templateCache.put('${3:name}.template.html', '${0:content of the template}');","\t}","","}());"]},"$sce.isEnabled()":{"prefix":"ngSce.isEnabled()","body":"\\$sce.isEnabled();"},"$sce.parseAs()":{"prefix":"ngSce.parseAs()","body":"\\$sce.parseAs(${1:type}, ${2:expression});"},"$sce.trustAs()":{"prefix":"ngSce.trustAs()","body":"\\$sce.trustAs(${1:type}, ${2:value});"},"$sce.trustAsHtml()":{"prefix":"ngSce.trustAsHtml()","body":"\\$sce.trustAsHtml(${1:value});"},"$sce.trustAsCss()":{"prefix":"ngSce.trustAsCss()","body":"\\$sce.trustAsCss(${1:value});"},"$sce.trustAsUrl()":{"prefix":"ngSce.trustAsUrl()","body":"\\$sce.trustAsUrl(${1:value});"},"$sce.trustAsResourceUrl()":{"prefix":"ngSce.trustAsResourceUrl()","body":"\\$sce.trustAsResourceUrl(${1:value});"},"$sce.trustAsJs()":{"prefix":"ngSce.trustAsJs()","body":"\\$sce.trustAsJs(${1:value});"},"$sce.getTrusted()":{"prefix":"ngSce.getTrusted()","body":"\\$sce.getTrusted(${1:type}, ${2:maybeTrusted});"},"$sce.getTrustedHtml()":{"prefix":"ngSce.getTrustedHtml()","body":"\\$sce.getTrustedHtml(${1:value});"},"$sce.getTrustedCss()":{"prefix":"ngSce.getTrustedCss()","body":"\\$sce.getTrustedCss(${1:value});"},"$sce.getTrustedUrl()":{"prefix":"ngSce.getTrustedUrl()","body":"\\$sce.getTrustedUrl(${1:value});"},"$sce.getTrustedResourceUrl()":{"prefix":"ngSce.getTrustedResourceUrl()","body":"\\$sce.getTrustedResourceUrl(${1:value});"},"$sce.getTrustedJs()":{"prefix":"ngSce.getTrustedJs()","body":"\\$sce.getTrustedJs(${1:value});"},"$sce.parseAsHtml()":{"prefix":"ngSce.parseAsHtml()","body":"\\$sce.parseAsHtml(${1:expression});"},"$sce.parseAsCss()":{"prefix":"ngSce.parseAsCss()","body":"\\$sce.parseAsCss(${1:expression});"},"$sce.parseAsUrl()":{"prefix":"ngSce.parseAsUrl()","body":"\\$sce.parseAsUrl(${1:expression});"},"$sce.parseAsResourceUrl()":{"prefix":"ngSce.parseAsResourceUrl()","body":"\\$sce.parseAsResourceUrl(${1:expression});"},"$sce.parseAsJs()":{"prefix":"ngSce.parseAsJs()","body":"\\$sce.parseAsJs(${1:expression}); "},"ngTemplateCache":{"prefix":"ngTemplateCache","body":["\\$templateCache.put('${1:name}.template.html', '${2:content of the template}');"]},"Angular $scope.property":{"prefix":"ngScope.property","description":"Angular 1.x $scope\n","body":["\\$scope.${1:key} = ${2:value};"]},"Angular $scope method":{"prefix":["ngScope.fn","ngScope.method"],"description":"Angular 1.x $scope method \n","body":["\\$scope.${fn} = function () {","\t$0","};"]},"$scope.$new()":{"prefix":"ngScope.$new()","body":"\\$scope.\\$new(${1:isolate}, ${2:parent});"},"$scope.$watch()":{"prefix":"ngScope.$watch()","body":"\\$scope.\\$watch(${1:watchExpression}, ${2:listener}, ${3:objectEquality});"},"$scope.$watchGroup()":{"prefix":"ngScope.$watchGroup()","body":"\\$scope.\\$watchGroup(${1:watchExpressions}, ${2:listener});"},"$scope.$watchCollection()":{"prefix":"ngScope.$watchCollection()","body":"\\$scope.\\$watchCollection(${1:obj}, ${2:listener});"},"$scope.$digest()":{"prefix":"ngScope.$digest()","body":"\\$scope.\\$digest();"},"$scope.$suspend()":{"prefix":"ngScope.$suspend()","body":"\\$scope.\\$suspend();"},"$scope.$isSuspended()":{"prefix":"ngScope.$isSuspended()","body":"\\$scope.\\$isSuspended();"},"$scope.$resume()":{"prefix":"ngScope.$resume()","body":"\\$scope.\\$resume();"},"$scope.$destroy()":{"prefix":"ngScope.$destroy()","body":"\\$scope.\\$destroy();"},"$scope.$eval()":{"prefix":"ngScope.$eval()","body":"\\$scope.\\$eval(${1:expression}, ${2:locals});"},"$scope.$evalAsync()":{"prefix":"ngScope.$evalAsync()","body":"\\$scope.\\$evalAsync(${1:expression}, ${2:locals});"},"$scope.$apply()":{"prefix":"ngScope.$apply()","body":["// change any model outside of the Angular context,","// to inform Angular of the changes by calling \\$apply() manually","\\$scope.\\$apply(${1:fn});"]},"$scope.$applyAsync()":{"prefix":"ngScope.$applyAsync()","body":"\\$scope.\\$applyAsync(${1:exp});"},"$scope.$on()":{"prefix":"ngScope.$on()","body":"\\$scope.\\$on(${1:name}, ${2:listener});"},"$scope.$emit()":{"prefix":"ngScope.$emit()","body":"\\$scope.\\$emit(${1:name}, ${2:args});"},"$scope.$broadcast()":{"prefix":"ngScope.$broadcast()","body":"\\$scope.\\$broadcast(${1:name}, ${2:args}); "},"$scope.$id":{"prefix":"ngScope.$id","body":"\\$scope.\\$id"},"$scope.$parent":{"prefix":"ngScope.$parent","body":"\\$scope.\\$parent"},"$scope.$root":{"prefix":"ngScope.$root","body":"\\$scope.\\$root"},"Angular rootScope":{"prefix":["ngrootScope","ngrScope"],"description":"Angular 1.x $rootScope\n","body":["\\$rootScope.${1:key} = ${2:value};"]},"Angular $emit":{"prefix":"ngEmit","description":"Angular 1.x $emit","body":["\\$scope.${onEmitEvent} = function () {","\t\\$scope.\\$emit('${EMIT_EVENT_NAME}', ${params});","};"]},"Angular $broadcast":{"prefix":"ngBroadcast","description":"Angular 1.x $broadcast","body":["\\$scope.${onBroadcastEvent} = function () {","\t\\$scope.\\$broadcast('${BROADCAST_EVENT_NAME}', ${params});","};"]},"Angular $on":{"prefix":"ngOn","description":"Angular 1.x $on","body":["var clearListener = \\$scope.\\$on('${EVENT_NAME}', function (event, params) {","\tconsole.dir(event);","\tconsole.dir(params);$0","});"]},"Angular $safeApply":{"prefix":"ngSafeApply","description":"Angular 1.x $safeApply","body":["function safeApply(\\$scope, fn) {","\t\\$scope.\\$\\$phase || \\$scope.\\$root.\\$\\$phase ? fn() : \\$scope.\\$apply(fn);","}"]},"$scope.$watch":{"prefix":"ngWatch","body":["var clearWatch = \\$scope.\\$watch('${1:watchExpression}', function(newValue, oldValue) {","\t$0","});"],"description":"$scope.$watch"},"$scope.$watchGroup":{"prefix":"ngWatchGroup","body":["var clearWatch = \\$scope.\\$watchGroup(['${1:watchExpressions}'], function(newValue, oldValue) {","\t$0","});"],"description":"$scope.$watchGroup"},"$scope.$watchCollection":{"prefix":"ngWatchCollection","body":["var clearWatch = \\$scope.\\$watchCollection('${1:watchExpression}', function(newCollection, oldCollection) {","\t$0","});"],"description":"$scope.$watchCollection"},"Angular Service (Simple)":{"prefix":"ngs","body":[".service('${1:name}Service', ['${2:\\$\\$api}', function (${2:\\$\\$api}) {","\t\tthis.addResource = addResource;","\t\tthis.getResources = getResources;","\t\tthis.deleteResource = deleteResource;","\t\tthis.updateResource = updateResource;","","\t\tfunction addResource(param) {","\t\t\t$3","\t\t}","","\t\tfunction getResources(param) {","\t\t\t$4","\t\t}","","\t\tfunction deleteResource(param) {","\t\t\t$5","\t\t}","","\t\tfunction updateResource(param) {","\t\t\t$6","\t\t}","","}])","$4"],"description":"Angular 1.x Service (Simple)\n"},"Angular Service":{"prefix":"ngService","description":"Angular 1.x Service\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.service('${2:name}Service', ${2:name}Service)","","\t${2:name}Service.\\$inject = ['${3:\\$\\$api}'];","","\tfunction ${2:name}Service(${3:\\$\\$api}){","","\t\tthis.addResource = addResource;","\t\tthis.getResources = getResources;","\t\tthis.deleteResource = deleteResource;","\t\tthis.updateResource = updateResource;","","\t\tfunction addResource(param) {","\t\t\t$4","\t\t}","","\t\tfunction getResources(param) {","\t\t\t$5","\t\t}","","\t\tfunction deleteResource(param) {","\t\t\t$6","\t\t}","","\t\tfunction updateResource(param) {","\t\t\t$7","\t\t}","","}());"]},"Angular UI-Router state":{"prefix":"ngState","description":"Angular 1.x UI-Router state\n","body":["var state${1:Name} = {","\tname: '${2:state}',","\turl: '${3:path/:id?query}',","\tparams: {","\t\t${4:param}: null","\t},","\ttemplateUrl: '${5:template}.html',","\tcontroller: '${6:Controller} as ${7:\\$ctrl}'","};"]},"Angular UI-Router state(Resolve Data)":{"prefix":"ngState.resolve","description":"Angular 1.x UI-Router state(Resolve Data)\n","body":["var state${1:Name} = {","\tname: '${2:state}',","\turl: '${3:path/:id?query}',","\ttemplateUrl: '${4:template}.html',","\tcontroller: '${5:Controller} as ${6:\\$ctrl}',","\tresolve: {","\t\t${7:obj}: ['\\$stateParams', '${8:depService}', function (\\$stateParams, ${8:depService}) { ","\t\t\treturn ${8:depService}.${9:getResources}(\\$stateParams.${10:id});","\t\t}]","\t}","};"]},"Angular UI-Router Route to Component(Resolve Data)":{"prefix":"ngState.component","description":"Angular 1.x UI-Router Route to Component\n","body":["var state${1:Name} = {","\tname: '${2:state}',","\turl: '${3:url}',","\tcomponent: '${4:component}',","\tresolve: {","\t\t${5:obj}: ['\\$stateParams', '${7:depService}', function (\\$stateParams, ${7:depService}) { ","\t\t\treturn ${7:depService}.${8:getResources}(\\$stateParams.${9:id});","\t\t}]","\t}","};"]},"$state.go":{"prefix":["ngState.go()","nggo"],"body":["\\$state.go('${1:state}'${2:, {${3:param}: ${4:value}}});"]},"$state.get()":{"prefix":"ngState.get()","body":"\\$state.get(${stateOrName}, ${context});"},"$state.includes()":{"prefix":"ngState.includes()","body":"\\$state.includes(${stateOrName}, ${params}, ${options});"},"$state.is()":{"prefix":"ngState.is()","body":"\\$state.is(${stateOrName}, ${params}, ${options});"},"$state.reload()":{"prefix":"ngState.reload()","body":"\\$state.reload(${state});"},"$state.transitionTo()":{"prefix":"ngState.transitionTo()","body":"\\$state.transitionTo(${to}, ${toParams}, ${options});"},"$urlRouterProvider.otherwise()":{"prefix":"ngState.otherwise()","body":"\\$urlRouterProvider.otherwise('/${index}');"},"$urlRouterProvider.when()":{"prefix":"ngState.when()","body":"\\$urlRouterProvider.when(${what}, ${handler});"}}