{"Angular $q":{"prefix":"ngq","description":"Angular 1.x $q\n","body":["var deferred = \\$q.defer();","","deferred.resolve(resultObj); //triggers successCallback","deferred.reject(reasonObj); //triggers errorCallback","deferred.notify(progressObj); //triggers progressCallback","","var promise = deferred.promise;","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}).catch(function ${4:fnFailure}() {","\t\t","\t}).finally(function ${5:fnAlways}() {","\t\t","\t});","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}, function ${2:errorCallback}() {","\t\t","\t}, function ${3:progressCallback}() {","\t\t","\t});",""]},"Angular $q.all":{"prefix":"ngqAll","description":"Angular 1.x $q.all\n","body":["\\$q.all([${1:promises}]).then(function (result) {","\t$0","});",""]},"Angular $q.race":{"prefix":"ngqRace","description":"Angular 1.x $q.race\n","body":["\\$q.race([${1:promises]).then(function (result) {","\t$0","});",""]},"Angular $http":{"prefix":"ngHTTP","description":"Angular 1.x $http\n","body":["\\$http({","\turl: '${url}',","\tmethod: '${METHOD}'","}).then(function ${successCallback}(result) {","\t$0","}, function ${errorCallback}(response) {","\t","});",""]},"Angular $http.get":{"prefix":"ngHTTPGet","description":"Angular 1.x $http.get\n","body":["\\$http.get('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.post":{"prefix":"ngHTTPPost","description":"Angular 1.x $http.post\n","body":["\\$http.post('${url}', data, config).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.put":{"prefix":"ngHTTPPut","description":"Angular 1.x $http.put\n","body":["\\$http.put('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.patch":{"prefix":"ngHTTPPatch","description":"Angular 1.x $http.patch\n","body":["\\$http.patch('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});"]},"Angular $http.delete":{"prefix":"ngHTTPDelete","description":"Angular 1.x $http.delete\n","body":["\\$http.delete('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.head":{"prefix":"ngHTTPHead","description":"Angular 1.x $http.head\n","body":["\\$http.head('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.jsonp":{"prefix":"ngHTTPJSONP","description":"Angular 1.x $http.jsonp\n","body":["\\$http.jsonp('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});"]},"Angular AJAX":{"prefix":"ngAJAX","description":"Angular 1.x AJAX\n","body":["(function () {","\t'use strict';","","\tangular.module('Analytics').factory('\\$\\$api', \\$\\$api);","","\t\\$\\$api.inject = ['\\$http', '\\$q'];","","\tfunction \\$\\$api(\\$http, \\$q) {","","\t\tfunction _request(\\$\\$method) {","\t\t\tvar deferred = \\$q.defer();","","\t\t\t\\$\\$method.then(function (response) {","\t\t\t\tdeferred.resolve(response);","\t\t\t}).catch(function (response) {","\t\t\t\tdeferred.reject(response);","\t\t\t});","","\t\t\treturn deferred.promise;","\t\t}","","\t\tfunction httpRequest(config) {","\t\t\tvar \\$\\$method = \\$http(config);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction getRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.get(url, config) : \\$http.get(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction postRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.post(url, data, config) : \\$http.post(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction putRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.put(url, data, config) : \\$http.put(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction patchRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.patch(url, data, config) : \\$http.patch(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction deleteRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.delete(url, config) : \\$http.delete(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction headRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.head(url, config) : \\$http.head(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction jsonpRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.jsonp(url, config) : \\$http.jsonp(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction allRequest(promises) {","\t\t\treturn \\$q.all(promises);","\t\t}","","\t\tfunction raceRequest(promises) {","\t\t\treturn \\$q.race(promises);","\t\t}","","\t\treturn {","\t\t\trequest: httpRequest,","\t\t\tget: getRequest,","\t\t\tpost: postRequest,","\t\t\tput: putRequest,","\t\t\tpatch: patchRequest,","\t\t\tdelete: deleteRequest,","\t\t\thead: headRequest,","\t\t\tjsonp: jsonpRequest,","\t\t\tall: allRequest,","\t\t\trace: raceRequest,","\t\t};","\t}","","})();"]},"Angular $$api.request":{"prefix":"ngRequest","description":"Angular 1.x $$api.request\n","body":["\\$\\$api.request({","\tmethod: '${GET}',","\turl: '${url}',","\tparams: ${params}","}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.get":{"prefix":"ngGet","description":"Angular 1.x $$api.get\n","body":["\\$\\$api.get('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.post":{"prefix":"ngPost","description":"Angular 1.x $$api.post\n","body":["\\$\\$api.post('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.put":{"prefix":"ngPut","description":"Angular 1.x $$api.put\n","body":["\\$\\$api.put('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.patch":{"prefix":"ngPatch","description":"Angular 1.x $$api.patch\n","body":["\\$\\$api.patch('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.delete":{"prefix":"ngDelete","description":"Angular 1.x $$api.delete\n","body":["\\$\\$api.delete('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.head":{"prefix":"ngHead","description":"Angular 1.x $$api.head\n","body":["\\$\\$api.head('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.jsonp":{"prefix":"ngJSONP","description":"Angular 1.x $$api.jsonp\n","body":["\\$\\$api.jsonp('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular Service return a $$api.request promise":{"prefix":"ngRequestData","description":"Angular 1.x Service $$api.request return a promise\n","body":["function ${requestData}(${config}) {","\treturn \\$\\$api.request(${config});","}",""]},"Angular Service return a $$api.get promise":{"prefix":"ngGetData","description":"Angular 1.x Service $$api.get return a promise\n","body":["function ${getData}(${url}, ${config}) {","\treturn \\$\\$api.get(${url}, ${config});","}",""]},"Angular Service return a $$api.post promise":{"prefix":"ngPostData","description":"Angular 1.x Service $$api.post return a promise\n","body":["function ${postData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.post(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.put promise":{"prefix":"ngPutData","description":"Angular 1.x Service $$api.put return a promise\n","body":["function ${putData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.put(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.patch promise":{"prefix":"ngPatchData","description":"Angular 1.x Service $$api.patch return a promise\n","body":["function ${patchData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.patch(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.delete promise":{"prefix":"ngDeleteData","description":"Angular 1.x Service $$api.delete return a promise\n","body":["function ${deleteData}(${url}, ${config}) {","\treturn \\$\\$api.delete(${url}, ${config});","}",""]},"Angular Service return a $$api.head promise":{"prefix":"ngHeadData","description":"Angular 1.x Service $$api.head return a promise\n","body":["function ${headData}(${url}, ${config}) {","\treturn \\$\\$api.head(${url}, ${config});","}",""]},"Angular Service return a $$api.jsonp promise":{"prefix":"ngJSONPData","description":"Angular 1.x Service $$api.jsonp return a promise\n","body":["function ${jsonpData}(${url}, ${config}) {","\treturn \\$\\$api.jsonp(${url}, ${config});","}",""]},"Angular Controller calls service promise":{"prefix":["ngResponse","ngCallAjax"],"description":"Angular 1.x Controller calls service promise\n","body":["${name}Service.${method}Data.then(function (result) {","\tif (result.data.code == '200') {","\t\t\\$scope.${data} = result.data.data;","\t\t$0","\t}","}).catch(function (response) {","","});",""]},"Angular $scope.property":{"prefix":"ngScope.property","description":"Angular 1.x $scope\n","body":["\\$scope.${1:key} = ${2:value};"]},"Angular $scope method":{"prefix":"ngScope.method","description":"Angular 1.x $scope method \n","body":["\\$scope.${fn} = function () {","\t$0","};"]},"$scope.$apply(fn)":{"prefix":"ngScope.apply","body":["// change any model outside of the Angular context,","// to inform Angular of the changes by calling \\$apply() manually","\\$scope.\\$apply(${1:fn});"],"description":"$scope.$apply(fn)"},"Angular rootScope":{"prefix":["ngrootScope","ngrScope"],"description":"Angular 1.x $rootScope\n","body":["\\$rootScope.${1:key} = ${2:value};"]},"Angular translate":{"prefix":["ngtranslate","ngi18n"],"description":"Angular 1.x Translation by a filter(angular-translate)\n","body":["{{'${I18N}'|translate}}"]},"Angular $emit":{"prefix":"ngEmit","description":"Angular 1.x $emit","body":["\\$scope.${onEmitEvent} = function () {","\t\\$scope.\\$emit('${EMIT_EVENT_NAME}', ${params});","};"]},"Angular $broadcast":{"prefix":"ngBroadcast","description":"Angular 1.x $broadcast","body":["\\$scope.${onBroadcastEvent} = function () {","\t\\$scope.\\$broadcast('${BROADCAST_EVENT_NAME}', ${params});","};"]},"Angular $on":{"prefix":"ngOn","description":"Angular 1.x $on","body":["var clearListener = \\$scope.\\$on('${EVENT_NAME}', function (event, params) {","\tconsole.dir(event);","\tconsole.dir(params);$0","});"]},"Angular off ($destroy)":{"prefix":["ngOff","ngDestroy"],"description":"Angular 1.x $off","body":["\\$element.on('\\$destroy', function () {","\t\\$element.off('event', handleEvent);","\tclearWatch();","\t\\$scope.\\$destroy();","});","\\$scope.\\$on('\\$destroy', function() {","\t\\$element.off('event', handleEvent);","// clearWatch();","// clearListener();","});"]},"Angular $safeApply":{"prefix":"ngSafeApply","description":"Angular 1.x $safeApply","body":["function safeApply(\\$scope, fn) {","\t\\$scope.\\$\\$phase || \\$scope.\\$root.\\$\\$phase ? fn() : \\$scope.\\$apply(fn);","}"]},"$timeout":{"prefix":"ngto","body":["\\$timeout(function() {","\t$0","});"],"description":"description"},"$scope.$watch":{"prefix":"ngWatch","body":["var clearWatch = \\$scope.\\$watch('${1:watchExpression}', function(newValue, oldValue) {","\t$0","});"],"description":"$scope.$watch"},"$scope.$watchGroup":{"prefix":"ngWatchGroup","body":["var clearWatch = \\$scope.\\$watchGroup(['${1:watchExpressions}'], function(newValue, oldValue) {","\t$0","});"],"description":"$scope.$watchGroup"},"$scope.$watchCollection":{"prefix":"ngWatchCollection","body":["var clearWatch = \\$scope.\\$watchCollection('${1:watchExpression}', function(newCollection, oldCollection) {","\t$0","});"],"description":"$scope.$watchCollection"},"Angular Component (Simple)":{"prefix":"ngco","body":[".component('${1:name}', {","\ttemplateUrl: '${2:component.tpl.html}',","\tbindings: {","\t\toneWay: '<?', // one-way","\t\ttwoWay: '=?',","\t\tstring: '@?',","\t\tonEvent: '&?', // on-event","\t},","\tcontroller: [\t\tfunction () {","\t\t\tvar \\$ctrl = this;","","\t\t\t\\$ctrl.\\$onInit = function () {","\t\t\t\t$0","\t\t\t};","","\t\t\t\\$ctrl.\\$onChanges = function (changes) {","\t\t\t\t","\t\t\t};","","\t\t\t\\$ctrl.\\$onDestroy = function () {","\t\t\t\t","\t\t\t};","","\t\t},","\t],","})",""],"description":"Angular 1.x Component (Simple)\n"},"Angular Component":{"prefix":"ngComponent","description":"Angular 1.5+ Component\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:Module}')","\t\t.component('${2:component}', ${2:component}());","","","\tfunction ${2:component}() {","","\t\t${2:component}Controller.\\$inject = [];","","\t\tfunction ${2:component}Controller() {","\t\t\tvar \\$ctrl = this;","","\t\t\t$ctrl.$onInit = function () {","\t\t\t\t$0","\t\t\t};","","\t\t\t$ctrl.$onChanges = function (changes) {","\t\t\t\t","\t\t\t};","","\t\t\t$ctrl.$onDestroy = function () {","\t\t\t\t","\t\t\t};","","\t\treturn {","\t\t\ttemplateUrl: 'component.tpl.html","\t\t\tbindings: {","\t\t\t\toneWay: '<?', // one-way","\t\t\t\ttwoWay: '=?',","\t\t\t\tstring: '@?',","\t\t\t\tonEvent: '&?', // on-event","\t\t\t},","\t\t\tcontroller: ${2:component}Controller,","\t\t\tcontrollerAs: '\\$ctrl'","\t\t}","\t}","","}());"]},"Angular Config (Simple)":{"prefix":"ngcon","body":[".config(['${1:\\$stateProvider}', '${2:\\$urlRouterProvider}', function (${1:\\$stateProvider}, ${2:\\$urlRouterProvider}) {","\t$0","}])"],"description":"Angular 1.x Config (Simple)\n"},"Angular Config":{"prefix":"ngConfig","description":"Angular 1.x Config\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.config(${2:config}Config);","","\t${2:config}Config.\\$inject = [];","","\tfunction ${2:config}Config() {","\t\t$0","\t}","","}());"]},"Angular Constant (Simple)":{"prefix":"ngconst","description":"Angular 1.x Constant (Simple)\n","body":[".constant('${1:CONSTANT}', ${2:Value})"]},"Angular Constant":{"prefix":"ngConstant","description":"Angular 1.x Constant\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.constant('${2:CONSTANT}', ${3:Value});","","}());"]},"Angular $ctrl method":{"prefix":"ngCtrl.method","description":"Angular 1.x $ctrl method \n","body":["\\$ctrl.${fn} = function () {","\t$0","};"]},"Angular $ctrl.property":{"prefix":"ngCtrl.property","description":"Angular 1.x $ctrl\n","body":["\\$ctrl.${1:key} = ${value};","$0"]},"Angular Controller (Simple)":{"prefix":"ngc","body":[".controller('${1:name}Ctrl', ['${2:\\$scope}', '${3:nameService}', function (${2:\\$scope}, ${3:nameService}) {","\t$0","}])",""],"description":"Angular 1.x Controller (Simple)\n"},"Angular Controller":{"prefix":"ngController","description":"Angular 1.x Controller\n依赖采用 Annotation 形式\n['dependencies', fn(dependencies)]，\n防止代码压缩参数破坏\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.controller('${2:name}Ctrl', ${2:name}Ctrl)","","\t${2:name}Ctrl.\\$inject = ['${3:\\$scope}'];","","\tfunction ${2:name}Ctrl(${3:\\$scope}) {","\t\tvar \\$ctrl = this;","\t\t$0","","\t}","","}());"]},"Angular Decorator":{"prefix":"ngDecorator","description":"Angular 1.x Decorator\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${module}')","\t\t.config(${decorator}Decorator)","","\tconfig${decorator}Decorator.\\$inject = ['$$provide'];","","\tfunction config${decorator}Decorator($$provide){","\t\tfunction _${targetService}Decorator($$delegate){","","\t\t\tfunction _decoratedTarget() {","\t\t\t\t//pre","\t\t\t\treturn $$delegate.${target}()","\t\t\t\t//post","\t\t\t}","","\t\t\treturn {","\t\t\t\t${target}: _decoratedTarget","\t\t\t}","\t\t}","","\t\t$$provide.decorator(${targetService}, _${targetService}Decorator);","\t}","","}());"]},"Angular Directive (Simple)":{"prefix":"ngd","body":[".directive('${1:name}', function () {","\treturn {","\t\trestrict: 'AE',","\t\ttemplateUrl: '${2:directive.html}',","\t\tscope: {","\t\t\toneWay: '<?', // one-way","\t\t\ttwoWay: '=?',","\t\t\tstring: '@?',","\t\t\tonEvent: '&?', // on-event","\t\t},","\t\tlink: function (\\$scope, \\$element, \\$attrs) {","\t\t\t$0","\t\t},","\t};","})"],"description":"Angular 1.x Directive (Simple)\n"},"Angular Directive(Component)":{"prefix":"ngDirective","description":"Angular 1.x Directive & Controller\n组件型指令(Component)\n用 controller 处理业务逻辑，自封闭、内聚\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.directive('${2:directive}', ${2:directive});","","\t${2:directive}.\\$inject = [];","","\tfunction ${2:directive}() {","","\t\tfunction link(\\$scope, \\$element, \\$attrs, controller){","\t\t}","","\t\treturn {","\t\t\tlink: link,","\t\t\trestrict: '${AE}',","\t\t\tscope: {","\t\t\t\toneWay: '<?', // one-way","\t\t\t\ttwoWay: '=?',","\t\t\t\tstring: '@?',","\t\t\t\tonEvent: '&?', // on-event","\t\t\t},","\t\t}","\t}","","} ());"]},"Angular Directive(Decorator)":{"prefix":"ngDirective.Decorator","description":"Angular 1.x Directive\n装饰器型指令(Decorator)\n用 link 函数，不是一个主体，只是附加行为能力，不使用新的作用域或独立的作用域\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.directive('${2:directive}', ${2:directive});","","\t${2:directive}.\\$inject = [];","","\tfunction ${2:directive}() {","\t\tvar directive = {","\t\t\tlink: link,","\t\t\trestrict: 'EA'","\t\t};","","\t\tfunction link(\\$scope, \\$element, \\$attrs) {","\t\t\t$0","\t\t}","","\t\treturn directive;","\t}","","})();"]},"Angular Factory (Simple)":{"prefix":"ngfa","body":[".factory('${1:name}', ['${2:dep}', function(${2:dep}){","\treturn function (){","\t\t$0","\t};","}])",""],"description":"Angular 1.x Factory (Simple)\n"},"Angular Factory":{"prefix":"ngFactory","description":"Angular 1.x Factory\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.factory('${2:name}Factory', ${2:name}Factory)","","\t${2:name}Factory.\\$inject = [];","","\tfunction ${2:name}Factory() {","\t\tvar service = {","\t\t\t$0","\t\t};","","\t\treturn service;","\t}","})();"]},"Angular Filter (Simple)":{"prefix":"ngf","body":[".filter('${1:name}', function () {","\treturn function (${2:input}) {","\t\treturn $0","\t};","})",""],"description":"Angular 1.x Filter (Simple)\n"},"Angular Filter":{"prefix":"ngFilter","description":"Angular 1.x Filter\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.filter('${2:name}', ${2:name})","","\tfunction ${2:name}() {","","\t\tfunction ${2:name}Filter(${Params}){","\t\t\t$0","\t\t\treturn ${Params}","\t\t}","","\t\treturn ${2:name}Filter;","\t}","","}());"]},"Angular Module (Simple)":{"prefix":"ngm","body":["var ${1:myApp} = angular.module('${1:myApp}', [$2]);$0"],"description":"Angular 1.x Module (Simple)\n"},"Angular Module":{"prefix":"ngModule","description":"Angular 1.x Module\n","body":["(function () {","\t'use strict';","","\tangular.module('${Module}', [","\t\t/* 1. Main App Module */","\t\t/* 1.1 Shared modules(2) */","\t\t","\t\t/* 1.2 Feature areas(3) */","\t\t","\t\t/* 2. Cross App Modules */","\t\t","\t\t/* 2.1 Angular modules */","\t\t","\t\t/* 2.2 Cross-app modules */","\t\t","\t\t/* 2.3 3rd-party modules */","\t\t","\t\t/* 3. App Feature Modules */","\t\t$0","\t]);","","}());"]},"Angular Provider":{"prefix":"ngProvider","description":"Angular 1.x Provider\n","body":["(function () {","\t'use strict';","","\tangular.module('${1:name}').provider('${2:name}', ${2:name}Provider);","","\tfunction ${2:name}Provider() {","\t\tthis.options = { delay: 5000, templateUrl: 'component.tpl.html' };","","\t\tthis.setOptions = function (options) {","\t\t\tif (!angular.isObject(options)) {","\t\t\t\tthrow new Error('Options should be an object!');","\t\t\t}","\t\t\tthis.options = angular.extend({}, this.options, options);","\t\t};","","\t\tthis.\\$get = providerFactory;","","\t\tproviderFactory.\\$inject = [","\t\t\t'\\$http',","\t\t\t'\\$q',","\t\t\t'\\$timeout',","\t\t\t'\\$window',","\t\t\t'\\$sce',","\t\t\t'\\$templateCache',","\t\t\t'\\$compile',","\t\t\t'\\$rootScope',","\t\t\t'\\$injector',","\t\t];","","\t\tfunction providerFactory(\\$http, \\$q, \\$timeout, \\$window, \\$sce, \\$templateCache, \\$compile, \\$rootScope, \\$injector) {","\t\t\tvar options = this.options;","$0","\t\t\tvar service = function (param, type) {","\t\t\t\tvar deferred = q.defer();","","\t\t\t\tif (typeof param !== 'object' || param === null) {","\t\t\t\t\tparam = {};","\t\t\t\t}","","\t\t\t\tparam.template = param.templateUrl || options.templateUrl;","","\t\t\t\tvar template = templateCache.get(param.template);","","\t\t\t\tif (template) {","\t\t\t\t\thandle(template);","\t\t\t\t} else {","\t\t\t\t\thttp","\t\t\t\t\t\t.get(param.template, { cache: true })","\t\t\t\t\t\t.then(function (response) {","\t\t\t\t\t\t\thandle(response.data);","\t\t\t\t\t\t})","\t\t\t\t\t\t.catch(function (error) {","\t\t\t\t\t\t\tthrow new Error('Template (' + param.template + ') could not be loaded. ' + error);","\t\t\t\t\t\t});","\t\t\t\t}","","\t\t\t\tfunction handle(template) {","\t\t\t\t\tvar scope = param.scope.new();","\t\t\t\t\tscope.message = \\$sce.trustAsHtml(param.message);","","\t\t\t\t\tvar templateElement = \\$compile(template)(scope);","","\t\t\t\t\tvar closeEvent = function (event) {","\t\t\t\t\t\tif (scope.onClose) {","\t\t\t\t\t\t\tscope.\\$apply(scope.onClose(templateElement));","\t\t\t\t\t\t}","","\t\t\t\t\t\ttemplateElement.remove();","\t\t\t\t\t\tscope.\\$destroy();","\t\t\t\t\t};","","\t\t\t\t\ttemplateElement.bind('click', closeEvent);","","\t\t\t\t\tfunction otherHandler() {}","","\t\t\t\t\t\\$timeout(otherHandler);","","\t\t\t\t\tdeferred.resolve(scope);","\t\t\t\t}","","\t\t\t\treturn deferred.promise;","\t\t\t};","","\t\t\tservice.info = function (param) {","\t\t\t\treturn this(param, 'info');","\t\t\t};","","\t\t\treturn service;","\t\t}","\t}","})();","","angular.module('${1:name}').run(['\\$templateCache', function (\\$templateCache) {","\t\\$templateCache.put('component.tpl.html', '');","})",""]},"Angular Run (Simple)":{"prefix":"ngr","body":[".run(['\\$templateCache', function (\\$templateCache) {","\t\\$templateCache.put('component.tpl.html', '');","$0","})",""],"description":"Angular 1.x Run (Simple)\n"},"Angular Run":{"prefix":"ngRun","description":"Angular 1.x Run\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.run(${2:name}Run)","","\t${2:name}Run.\\$inject = ['\\$templateCache'];","","\tfunction ${2:name}Run(\\$templateCache) {","\t\t$templateCache.put('component.tpl.html', '');$0","\t}","","}());"]},"Angular Service (Simple)":{"prefix":"ngs","body":[".service('${1:name}Service', ['${2:\\$\\$api}', function (${2:\\$\\$api}) {","\t\tthis.addResource = addResource;","\t\tthis.getResources = getResources;","\t\tthis.deleteResource = deleteResource;","\t\tthis.updateResource = updateResource;","","\t\tfunction addResource(param) {","\t\t\t$3","\t\t}","","\t\tfunction getResources(param) {","\t\t\t$4","\t\t}","","\t\tfunction deleteResource(param) {","\t\t\t$5","\t\t}","","\t\tfunction updateResource(param) {","\t\t\t$6","\t\t}","","}])","$4"],"description":"Angular 1.x Service (Simple)\n"},"Angular Service":{"prefix":"ngService","description":"Angular 1.x Service\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${1:name}')","\t\t.service('${2:name}Service', ${2:name}Service)","","\t${2:name}Service.\\$inject = ['${3:\\$\\$api}'];","","\tfunction ${2:name}Service(${3:\\$\\$api}){","","\t\tthis.addResource = addResource;","\t\tthis.getResources = getResources;","\t\tthis.deleteResource = deleteResource;","\t\tthis.updateResource = updateResource;","","\t\tfunction addResource(param) {","\t\t\t$4","\t\t}","","\t\tfunction getResources(param) {","\t\t\t$5","\t\t}","","\t\tfunction deleteResource(param) {","\t\t\t$6","\t\t}","","\t\tfunction updateResource(param) {","\t\t\t$7","\t\t}","","}());"]},"Angular UI-Router Multiple named uiviews":{"prefix":"uiviews","description":"Angular 1.x UI-Router, Defining Named Views\n<uiview class=\"header\"></uiview>\n<uiview class=\"nav\"></uiview>\n<uiview class=\"content\"></uiview>\n","body":["var state${Name}Report = {","\tname: '${report}',","\tviews: {","\t\tfilters: FiltersComponent,","\t\ttabledata: TabledataComponent,","\t\tgraph: GraphComponent,","\t}","}"]},"Angular UI-Router state":{"prefix":"ngstate","description":"Angular 1.x UI-Router state\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Resolve Data)":{"prefix":"ngstateresove","description":"Angular 1.x UI-Router state(Resolve Data)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}',","\tresolve: {","\t\t${obj}: ['\\$stateParams', '${objService}', function (\\$stateParams, ${objService}) { ","\t\t\treturn ${objService}.${getObj}(\\$stateParams.${id});","\t\t}]","\t}","};"]},"Angular UI-Router Route to Component(Resolve Data)":{"prefix":"ngstatecomponent","description":"Angular 1.x UI-Router Route to Component\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\tcomponent: '${component}',","\tresolve: {","\t\t${obj}: ['\\$stateParams', '${objService}', function (\\$stateParams, ${objService}) { ","\t\t\treturn ${objService}.${getObj}(\\$stateParams.${id});","\t\t}]","\t}","};"]},"Angular UI-Router state(Path)":{"prefix":"ngstatepath","description":"Angular 1.x UI-Router state(Path)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}/:${id}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Query)":{"prefix":"ngstatequery","description":"Angular 1.x UI-Router state(Query)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}?${query}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Non-url)":{"prefix":"ngstatenonurl","description":"Angular 1.x UI-Router state(Non-url)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\tparams: {","\t\t${id}: null","\t},","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"$state.go":{"prefix":["ngstatego","nggo"],"description":"Angular 1.x UI-Router $state\n$state.go(to [, toParams] [, options])","body":["\\$state.go('${state}', {${param}: ${value});"]},"UISref":{"prefix":["uisref","sref"],"description":"Angular 1.x UI-Router ui-sref\n","body":["ui-sref=\"${statename}\""]},"UISref, active":{"prefix":["uisrefactive","srefactive"],"description":"Angular 1.x UI-Router UISref, state is active\n","body":["ui-sref=\"${statename}\" ui-sref-active=\"${cls}_active\""]},"UISref, Parameters":{"prefix":["uisrefparams","srefparams"],"description":"Angular 1.x UI-Router UISref take params\n","body":["ui-sref=\"${statename}({ ${id}: ${value} })\""]}}