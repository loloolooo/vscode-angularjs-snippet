{
	"Angular Provider": {
		"prefix": "ngProvider",
		"description": "Angular 1.x Provider\n",
		"body": [
			"(function () {",
			"\t'use strict';",
			"",
			"\tangular.module('${1:name}').provider('${2:name}', ${2:name}Provider);",
			"",
			"\tfunction ${2:name}Provider() {",
			"\t\tthis.options = { delay: 5000, templateUrl: 'component.tpl.html' };",
			"",
			"\t\tthis.setOptions = function (options) {",
			"\t\t\tif (!angular.isObject(options)) {",
			"\t\t\t\tthrow new Error('Options should be an object!');",
			"\t\t\t}",
			"\t\t\tthis.options = angular.extend({}, this.options, options);",
			"\t\t};",
			"",
			"\t\tthis.\\$get = providerFactory;",
			"",
			"\t\tproviderFactory.\\$inject = [",
			"\t\t\t'\\$http',",
			"\t\t\t'\\$q',",
			"\t\t\t'\\$timeout',",
			"\t\t\t'\\$window',",
			"\t\t\t'\\$sce',",
			"\t\t\t'\\$templateCache',",
			"\t\t\t'\\$compile',",
			"\t\t\t'\\$rootScope',",
			"\t\t\t'\\$injector',",
			"\t\t];",
			"",
			"\t\tfunction providerFactory(\\$http, \\$q, \\$timeout, \\$window, \\$sce, \\$templateCache, \\$compile, \\$rootScope, \\$injector) {",
			"\t\t\tvar options = this.options;",
			"$0",
			"\t\t\tvar service = function (param, type) {",
			"\t\t\t\tvar deferred = q.defer();",
			"",
			"\t\t\t\tif (typeof param !== 'object' || param === null) {",
			"\t\t\t\t\tparam = {};",
			"\t\t\t\t}",
			"",
			"\t\t\t\tparam.template = param.templateUrl || options.templateUrl;",
			"",
			"\t\t\t\tvar template = templateCache.get(param.template);",
			"",
			"\t\t\t\tif (template) {",
			"\t\t\t\t\thandle(template);",
			"\t\t\t\t} else {",
			"\t\t\t\t\thttp",
			"\t\t\t\t\t\t.get(param.template, { cache: true })",
			"\t\t\t\t\t\t.then(function (response) {",
			"\t\t\t\t\t\t\thandle(response.data);",
			"\t\t\t\t\t\t})",
			"\t\t\t\t\t\t.catch(function (error) {",
			"\t\t\t\t\t\t\tthrow new Error('Template (' + param.template + ') could not be loaded. ' + error);",
			"\t\t\t\t\t\t});",
			"\t\t\t\t}",
			"",
			"\t\t\t\tfunction handle(template) {",
			"\t\t\t\t\tvar scope = param.scope.new();",
			"\t\t\t\t\tscope.message = \\$sce.trustAsHtml(param.message);",
			"",
			"\t\t\t\t\tvar templateElement = \\$compile(template)(scope);",
			"",
			"\t\t\t\t\tvar closeEvent = function (event) {",
			"\t\t\t\t\t\tif (scope.onClose) {",
			"\t\t\t\t\t\t\tscope.\\$apply(scope.onClose(templateElement));",
			"\t\t\t\t\t\t}",
			"",
			"\t\t\t\t\t\ttemplateElement.remove();",
			"\t\t\t\t\t\tscope.\\$destroy();",
			"\t\t\t\t\t};",
			"",
			"\t\t\t\t\ttemplateElement.bind('click', closeEvent);",
			"",
			"\t\t\t\t\tfunction otherHandler() {}",
			"",
			"\t\t\t\t\t\\$timeout(otherHandler);",
			"",
			"\t\t\t\t\tdeferred.resolve(scope);",
			"\t\t\t\t}",
			"",
			"\t\t\t\treturn deferred.promise;",
			"\t\t\t};",
			"",
			"\t\t\tservice.info = function (param) {",
			"\t\t\t\treturn this(param, 'info');",
			"\t\t\t};",
			"",
			"\t\t\treturn service;",
			"\t\t}",
			"\t}",
			"})();",
			"",
			"angular.module('${1:name}').run(['\\$templateCache', function (\\$templateCache) {",
			"\t\\$templateCache.put('component.tpl.html', '');",
			"})",
			""
		]
	}
}
