{"Angular $q":{"prefix":"ngq","description":"Angular 1.x $q\n","body":["var deferred = \\$q.defer();","","deferred.resolve(resultObj); //triggers successCallback","deferred.reject(reasonObj); //triggers errorCallback","deferred.notify(progressObj); //triggers progressCallback","","var promise = deferred.promise;","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}).catch(function ${4:fnFailure}() {","\t\t","\t}).finally(function ${5:fnAlways}() {","\t\t","\t});","","promise","\t.then(function ${1:successCallback}() {","\t\t","\t}, function ${2:errorCallback}() {","\t\t","\t}, function ${3:progressCallback}() {","\t\t","\t});",""]},"Angular $q.all":{"prefix":"ngqAll","description":"Angular 1.x $q.all\n","body":["\\$q.all([${1:promises}]).then(function (result) {","\t$0","});",""]},"Angular $q.race":{"prefix":"ngqRace","description":"Angular 1.x $q.race\n","body":["\\$q.race([${1:promises]).then(function (result) {","\t$0","});",""]},"Angular $http":{"prefix":"ngHTTP","description":"Angular 1.x $http\n","body":["\\$http({","\turl: '${url}',","\tmethod: '${METHOD}'","}).then(function ${successCallback}(result) {","\t$0","}, function ${errorCallback}(response) {","\t","});",""]},"Angular $http.get":{"prefix":"ngHTTPGet","description":"Angular 1.x $http.get\n","body":["\\$http.get('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.post":{"prefix":"ngHTTPPost","description":"Angular 1.x $http.post\n","body":["\\$http.post('${url}', data, config).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.put":{"prefix":"ngHTTPPut","description":"Angular 1.x $http.put\n","body":["\\$http.put('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.patch":{"prefix":"ngHTTPPatch","description":"Angular 1.x $http.patch\n","body":["\\$http.patch('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});"]},"Angular $http.delete":{"prefix":"ngHTTPDelete","description":"Angular 1.x $http.delete\n","body":["\\$http.delete('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.head":{"prefix":"ngHTTPHead","description":"Angular 1.x $http.head\n","body":["\\$http.head('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});",""]},"Angular $http.jsonp":{"prefix":"ngHTTPJSONP","description":"Angular 1.x $http.jsonp\n","body":["\\$http.jsonp('${url}', ${config}).then(function(result){","\t${0}","}, function (response) {","\t","});"]},"Angular AJAX":{"prefix":"ngAJAX","description":"Angular 1.x AJAX\n","body":["(function () {","\t'use strict';","","\tangular.module('Analytics').factory('\\$\\$api', \\$\\$api);","","\t\\$\\$api.inject = ['\\$http', '\\$q'];","","\tfunction \\$\\$api(\\$http, \\$q) {","","\t\tfunction _request(\\$\\$method) {","\t\t\tvar deferred = \\$q.defer();","","\t\t\t\\$\\$method.then(function (response) {","\t\t\t\tdeferred.resolve(response);","\t\t\t}).catch(function (response) {","\t\t\t\tdeferred.reject(response);","\t\t\t});","","\t\t\treturn deferred.promise;","\t\t}","","\t\tfunction httpRequest(config) {","\t\t\tvar \\$\\$method = \\$http(config);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction getRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.get(url, config) : \\$http.get(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction postRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.post(url, data, config) : \\$http.post(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction putRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.put(url, data, config) : \\$http.put(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction patchRequest(url, data, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.patch(url, data, config) : \\$http.patch(url, data);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction deleteRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.delete(url, config) : \\$http.delete(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction headRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.head(url, config) : \\$http.head(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction jsonpRequest(url, config) {","\t\t\tvar \\$\\$method = (typeof config !== 'undefined') ? \\$http.jsonp(url, config) : \\$http.jsonp(url);","","\t\t\treturn _request(\\$\\$method);","\t\t}","","\t\tfunction allRequest(promises) {","\t\t\treturn \\$q.all(promises);","\t\t}","","\t\tfunction raceRequest(promises) {","\t\t\treturn \\$q.race(promises);","\t\t}","","\t\treturn {","\t\t\trequest: httpRequest,","\t\t\tget: getRequest,","\t\t\tpost: postRequest,","\t\t\tput: putRequest,","\t\t\tpatch: patchRequest,","\t\t\tdelete: deleteRequest,","\t\t\thead: headRequest,","\t\t\tjsonp: jsonpRequest,","\t\t\tall: allRequest,","\t\t\trace: raceRequest,","\t\t};","\t}","","})();"]},"Angular $$api.request":{"prefix":"ngRequest","description":"Angular 1.x $$api.request\n","body":["\\$\\$api.request({","\tmethod: '${GET}',","\turl: '${url}',","\tparams: ${params}","}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.get":{"prefix":"ngGet","description":"Angular 1.x $$api.get\n","body":["\\$\\$api.get('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.post":{"prefix":"ngPost","description":"Angular 1.x $$api.post\n","body":["\\$\\$api.post('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.put":{"prefix":"ngPut","description":"Angular 1.x $$api.put\n","body":["\\$\\$api.put('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.patch":{"prefix":"ngPatch","description":"Angular 1.x $$api.patch\n","body":["\\$\\$api.patch('${url}', ${data}, ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.delete":{"prefix":"ngDelete","description":"Angular 1.x $$api.delete\n","body":["\\$\\$api.delete('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.head":{"prefix":"ngHead","description":"Angular 1.x $$api.head\n","body":["\\$\\$api.head('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular $$api.jsonp":{"prefix":"ngJSONP","description":"Angular 1.x $$api.jsonp\n","body":["\\$\\$api.jsonp('${url}', ${config}).then(function (result) {","\t$0","}).catch(function (response) {","\t","});",""]},"Angular Service return a $$api.request promise":{"prefix":"ngRequestData","description":"Angular 1.x Service $$api.request return a promise\n","body":["function ${requestData}(${config}) {","\treturn \\$\\$api.request(${config});","}",""]},"Angular Service return a $$api.get promise":{"prefix":"ngGetData","description":"Angular 1.x Service $$api.get return a promise\n","body":["function ${getData}(${url}, ${config}) {","\treturn \\$\\$api.get(${url}, ${config});","}",""]},"Angular Service return a $$api.post promise":{"prefix":"ngPostData","description":"Angular 1.x Service $$api.post return a promise\n","body":["function ${postData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.post(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.put promise":{"prefix":"ngPutData","description":"Angular 1.x Service $$api.put return a promise\n","body":["function ${putData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.put(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.patch promise":{"prefix":"ngPatchData","description":"Angular 1.x Service $$api.patch return a promise\n","body":["function ${patchData}(${url}, ${data}, ${config}) {","\treturn \\$\\$api.patch(${url}, ${data}, ${config});","}",""]},"Angular Service return a $$api.delete promise":{"prefix":"ngDeleteData","description":"Angular 1.x Service $$api.delete return a promise\n","body":["function ${deleteData}(${url}, ${config}) {","\treturn \\$\\$api.delete(${url}, ${config});","}",""]},"Angular Service return a $$api.head promise":{"prefix":"ngHeadData","description":"Angular 1.x Service $$api.head return a promise\n","body":["function ${headData}(${url}, ${config}) {","\treturn \\$\\$api.head(${url}, ${config});","}",""]},"Angular Service return a $$api.jsonp promise":{"prefix":"ngJSONPData","description":"Angular 1.x Service $$api.jsonp return a promise\n","body":["function ${jsonpData}(${url}, ${config}) {","\treturn \\$\\$api.jsonp(${url}, ${config});","}",""]},"Angular Controller calls service promise":{"prefix":["ngResponse","ngCallAjax"],"description":"Angular 1.x Controller calls service promise\n","body":["${name}Service.${method}Data.then(function (result) {","\tif (result.data.code == '200') {","\t\t\\$scope.${data} = result.data.data;","\t\t$0","\t}","}).catch(function (response) {","","});",""]},"Angular scope":{"prefix":"ngscope","description":"Angular 1.x $scope\n","body":["\\$scope.${key} = ${value};"]},"Angular rootScope":{"prefix":["ngrootScope","ngrScope"],"description":"Angular 1.x $rootScope\n","body":["\\$rootScope.${key} = ${value};"]},"Angular vm":{"prefix":"ngvm","description":"Angular 1.x vm\n","body":["vm.${key} = ${value};"]},"Angular translate":{"prefix":["ngtranslate","ngi18n"],"description":"Angular 1.x Translation by a filter(angular-translate)\n","body":["{{'${I18N}'|translate}}"]},"Angular $emit":{"prefix":"ngEmit","description":"Angular 1.x $emit","body":["\\$scope.${onEmitEvent} = function () {","\t\\$scope.\\$emit('${EMIT_EVENT_NAME}', ${params});","}"]},"Angular $broadcast":{"prefix":"ngBroadcast","description":"Angular 1.x $broadcast","body":["\\$scope.${onBroadcastEvent} = function () {","\t\\$scope.\\$broadcast('${BROADCAST_EVENT_NAME}', ${params});","}"]},"Angular $on":{"prefix":"ngOn","description":"Angular 1.x $on","body":["\\$scope.\\$on('${EVENT_NAME}', function (event, params) {","\tconsole.dir(event);","\tconsole.dir(params);$0","});"]},"Angular $off":{"prefix":"ngOff","description":"Angular 1.x $off","body":["\\$scope.\\$on('\\$destroy', function() {","\telement.off('event', handleEvent);","});"]},"Angular $safeApply":{"prefix":"ngSafeApply","description":"Angular 1.x $safeApply","body":["function safeApply(\\$scope, fn) {","\t\\$scope.\\$\\$phase || \\$scope.\\$root.\\$\\$phase ? fn() : \t$scope.\\$apply(fn);","}"]},"Angular Component":{"prefix":"ngcomponent","description":"Angular 1.5+ Component\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.component('${component}', ${component}());","","","\tfunction ${component}() {","","\t\t${component}Controller.\\$inject = [];","","\t\tfunction ${component}Controller() {","\t\t\tvar vm = this;","\t\t\t","\t\t\tinit();","","\t\t\tfunction init() {","\t\t\t\t$0","\t\t\t}","\t\t}","","\t\treturn {","\t\t\tbindings: {},","\t\t\tcontroller: ${component}Controller,","\t\t\tcontrollerAs: '\\$ctrl'","\t\t}","\t}","","}());"]},"Angular Config":{"prefix":"ngconfig","description":"Angular 1.x Config\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.config(${Config}Config);","","\t${config}Config.\\$inject = [];","","\tfunction ${Config}Config() {","\t\t$0","\t}","","}());"]},"Angular Constant":{"prefix":"ngconstant","description":"Angular 1.x Constant\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.constant('${CONSTANT}', ${Value});","","}());"]},"Angular Controller":{"prefix":"ngcontroller","description":"Angular 1.x Controller\n依赖采用 Annotation 形式\n['dependencies', fn(dependencies)]，\n防止代码压缩参数破坏\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.controller('${Controller}Ctrl', ${Controller}Ctrl)","","\t${Controller}Ctrl.\\$inject = [];","","\tfunction ${Controller}Ctrl() {","\t\tvar vm = this;","","\t\tfunction init() {","\t\t\t$0","\t\t}","","\t\tinit();","","\t}","","}());"]},"Angular Decorator":{"prefix":"ngdecorator","description":"Angular 1.x Decorator\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${module}')","\t\t.config(${decorator}Decorator)","","\tconfig${decorator}Decorator.\\$inject = ['$$provide'];","","\tfunction config${decorator}Decorator($$provide){","\t\tfunction _${targetService}Decorator($$delegate){","","\t\t\tfunction _decoratedTarget() {","\t\t\t\t//pre","\t\t\t\treturn $$delegate.${target}()","\t\t\t\t//post","\t\t\t}","","\t\t\treturn {","\t\t\t\t${target}: _decoratedTarget","\t\t\t}","\t\t}","","\t\t$$provide.decorator(${targetService}, _${targetService}Decorator);","\t}","","}());"]},"Angular Directive(Component)":{"prefix":"ngdirective&controller","description":"Angular 1.x Directive & Controller\n组件型指令(Component)\n用 controller 处理业务逻辑，自封闭、内聚\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.directive('${directive}', ${directive});","","\t${directive}.\\$inject = [];","","\tfunction ${directive}() {","","\t\tfunction ${directive}Ctrl() {","\t\t\tvar vm = this;","\t\t\t","\t\t\tinit();","","\t\t\tfunction init() {","\t\t\t\t$0","\t\t\t}","\t\t}","","\t\tfunction link(scope, element, attrs, controller){","\t\t}","","\t\treturn {","\t\t\tbindToController: true,","\t\t\tcontroller: ${directive}Ctrl,","\t\t\tcontrollerAs: '${Ctrl}',","\t\t\tlink: link,","\t\t\trestrict: '${AE}',","\t\t\tscope: {},","\t\t}","\t}","","} ());"]},"Angular Directive(Decorator)":{"prefix":"ngdirective","description":"Angular 1.x Directive\n装饰器型指令(Decorator)\n用 link 函数，不是一个主体，只是附加行为能力，不使用新的作用域或独立的作用域\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.directive('${directive}', ${directive});","","\t${directive}.\\$inject = [];","","\tfunction ${directive}() {","\t\tvar directive = {","\t\t\tlink: link,","\t\t\trestrict: 'EA'","\t\t};","","\t\tfunction link(scope, element, attrs) {","\t\t\t$0","\t\t}","","\t\treturn directive;","\t}","","})();"]},"Angular Factory":{"prefix":"ngfactory","description":"Angular 1.x Factory\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.factory('${Factory}', ${Factory})","","\t${Factory}.\\$inject = ['\\$http'];","","\tfunction ${Factory}(\\$http) {","\t\tvar service = {","\t\t\t${getData}: ${getData}","\t\t};","","\t\tfunction ${getData}() {","\t\t\t$0","\t\t}","","\t\treturn service;","\t}","})();"]},"Angular Filter":{"prefix":"ngfilter","description":"Angular 1.x Filter\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.filter('${Filter}', ${Filter})","","\tfunction ${Filter}() {","","\t\tfunction ${Filter}Filter(${Params}){","\t\t\t$0","\t\t\treturn ${Params}","\t\t}","","\t\treturn ${Filter}Filter;","\t}","","}());"]},"Angular Module":{"prefix":"ngmodule","description":"Angular 1.x Module\n","body":["(function () {","\t'use strict';","","\tangular.module('${Module}', [","\t\t/* 1. Main App Module */","\t\t/* 1.1 Shared modules(2) */","\t\t","\t\t/* 1.2 Feature areas(3) */","\t\t","\t\t/* 2. Cross App Modules */","\t\t","\t\t/* 2.1 Angular modules */","\t\t","\t\t/* 2.2 Cross-app modules */","\t\t","\t\t/* 2.3 3rd-party modules */","\t\t","\t\t/* 3. App Feature Modules */","\t\t$0","\t]);","","}());"]},"Angular Provider":{"prefix":"ngprovider","description":"Angular 1.x Provider\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${module}')","\t\t.provider('${provider}', ${provider}Provider)","","\tfunction ${provider}Provider() {","\t\tvar configValue = false;","","\t\tthis.setConfigValue = function (value) {","\t\t\tconfigValue = value;","\t\t};","","\t\tthis.$$get = providerFactory;","","\t\tproviderFactory.\\$inject = ['\\$http'];","","\t\tfunction providerFactory(\\$http) {","\t\t\tvar service = {","\t\t\t\t${getData}: ${getData}","\t\t\t};","","\t\t\tfunction ${getData}() {","\t\t\t\treturn configValue;","\t\t\t}","","\t\t\treturn service;","","\t\t}","\t}","})();"]},"Angular Run":{"prefix":"ngrun","description":"Angular 1.x Run\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.run(${Run}Run)","","\t${Run}Run.\\$inject = [];","","\tfunction ${Run}Run() {","\t\t$0","\t}","","}());"]},"Angular Service":{"prefix":"ngservice","description":"Angular 1.x Service\n","body":["(function () {","\t'use strict';","","\tangular","\t\t.module('${Module}')","\t\t.service('${Service}', ${Service})","","\t${Service}.\\$inject = ['\\$http', '\\$q'];","","\tfunction ${Service}(\\$http, \\$q){","","\t\tthis.${getData} = ${getData};","","\t\tfunction ${getData}() {","\t\t\t$0","\t\t}","\t}","","}());"]},"Angular UI-Router Multiple named uiviews":{"prefix":"uiviews","description":"Angular 1.x UI-Router, Defining Named Views\n<uiview class=\"header\"></uiview>\n<uiview class=\"nav\"></uiview>\n<uiview class=\"content\"></uiview>\n","body":["var state${Name}Report = {","\tname: '${report}',","\tviews: {","\t\tfilters: FiltersComponent,","\t\ttabledata: TabledataComponent,","\t\tgraph: GraphComponent,","\t}","}"]},"Angular UI-Router state":{"prefix":"ngstate","description":"Angular 1.x UI-Router state\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Resolve Data)":{"prefix":"ngstateresove","description":"Angular 1.x UI-Router state(Resolve Data)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}',","\tresolve: {","\t\t${obj}: ['\\$stateParams', '${objService}', function (\\$stateParams, ${objService}) { ","\t\t\treturn ${objService}.${getObj}(\\$stateParams.${id});","\t\t}]","\t}","};"]},"Angular UI-Router Route to Component(Resolve Data)":{"prefix":"ngstatecomponent","description":"Angular 1.x UI-Router Route to Component\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\tcomponent: '${component}',","\tresolve: {","\t\t${obj}: ['\\$stateParams', '${objService}', function (\\$stateParams, ${objService}) { ","\t\t\treturn ${objService}.${getObj}(\\$stateParams.${id});","\t\t}]","\t}","};"]},"Angular UI-Router state(Path)":{"prefix":"ngstatepath","description":"Angular 1.x UI-Router state(Path)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}/:${id}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Query)":{"prefix":"ngstatequery","description":"Angular 1.x UI-Router state(Query)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}?${query}',","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"Angular UI-Router state(Non-url)":{"prefix":"ngstatenonurl","description":"Angular 1.x UI-Router state(Non-url)\n","body":["var state${Name} = {","\tname: '${state}',","\turl: '${url}',","\tparams: {","\t\t${id}: null","\t},","\ttemplateUrl: '${template}.html',","\tcontroller: '${Controller} as ${vm}'","};"]},"$state.go":{"prefix":["ngstatego","nggo"],"description":"Angular 1.x UI-Router $state\n$state.go(to [, toParams] [, options])","body":["\\$state.go('${state}', {${param}: ${value});"]},"UISref":{"prefix":["uisref","sref"],"description":"Angular 1.x UI-Router ui-sref\n","body":["ui-sref=\"${statename}\""]},"UISref, active":{"prefix":["uisrefactive","srefactive"],"description":"Angular 1.x UI-Router UISref, state is active\n","body":["ui-sref=\"${statename}\" ui-sref-active=\"${cls}_active\""]},"UISref, Parameters":{"prefix":["uisrefparams","srefparams"],"description":"Angular 1.x UI-Router UISref take params\n","body":["ui-sref=\"${statename}({ ${id}: ${value} })\""]}}